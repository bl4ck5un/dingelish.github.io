initSidebarItems({"enum":[["TryLockError","An enumeration of possible errors which can occur while calling the [`try_lock`] method."]],"fn":[["rsgx_cpuid",""],["rsgx_cpuidex",""]],"mod":[["once","A \"once initialization\" primitive"],["thread","Native threads."],["thread_info",""]],"struct":[["PoisonError","A type of error which can be returned whenever a lock is acquired."],["SgxCond","A Condition Variable"],["SgxMutex","A mutual exclusion primitive useful for protecting shared data"],["SgxMutexGuard","An RAII implementation of a \"scoped lock\" of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."],["SgxRwLock","A reader-writer lock"],["SgxRwLockReadGuard","RAII structure used to release the shared read access of a lock when dropped."],["SgxRwLockWriteGuard","RAII structure used to release the exclusive write access of a lock when dropped."],["SgxSpinlock",""],["SgxSpinlockGuard",""]],"type":[["LockResult","A type alias for the result of a lock method which can be poisoned."],["TryLockResult","A type alias for the result of a nonblocking locking method."]]});